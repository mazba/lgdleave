<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\Core\Configure;
use Cake\Core\Exception\Exception;
use Cake\Datasource\ConnectionManager;
use Cake\ORM\TableRegistry;
use Phinx\Config\Config;

/**
 * CitizenCorner Controller
 *
 * @property \App\Model\Table\CitizenCornerTable $CitizenCorner
 */
class ReportApplicantController extends AppController
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow();
        $this->loadComponent('RequestHandler');

    }

    /**
     * Index method
     *
     * @return void
     */
    public function index()
    {
        $auth = $this->Auth->user();


        if ($this->request->is('post')) {

            $input_data=$this->request->data;

            $status = isset($input_data['status'])?$input_data['status']:'';
            $start_date = isset($input_data['from_date'])?strtotime($input_data['from_date']):'';
            $end_date = isset($input_data['to_date'])?strtotime($input_data['to_date']):'';


            $applicants = TableRegistry::get('applications')->find();

            $applicants->select(['applications.id','applications.temporary_id','applications.applicant_id','applications.applicant_name_bn','applications.phone','applications.email','applications.application_type_id','applications.start_date','applications.end_date','applications.status']);
            $applicants->select(['applicants.id','applicants.applicant_type_id','applicants.location_type_id','applicants.division_id','applicants.district_id','applicants.upazila_id','applicants.union_id','applicants.union_ward','applicants.city_corporation_id','applicants.city_corporation_ward_id','applicants.municipal_id','applicants.municipal_ward_id']);
            $applicants->select(['application_types.id','application_types.title_bn']);

            $applicants->where(['applicants.user_id' => $auth['id']]);
            if ($status != "") {
                $applicants->where(['applications.status' => $status]);
            }
            if (!empty($start_date) && $start_date > 0) {
                $applicants->where(['start_date  >=' => $start_date]);
            }
            if (!empty($end_date) && $end_date > 0) {
                $applicants->where(['end_date  <=' => $end_date]);
            }

            $applicants->leftJoin('applicants', 'applicants.id=applications.applicant_id');
            $applicants->leftJoin('application_types', 'application_types.id=applications.application_type_id');

           // echo "<pre>";print_r($applicants->toArray());die();
            $reportData =$applicants->toArray();


            //   echo "<pre/>"; print_r($reportData);die();
            $this->set('reportData', $reportData);
            $this->set('_serialize', ['reportData']);
        }



        $this->set(compact('locationTypes', 'applicationTypes','divisions'));

    }




}
